#***************************************************************************#
#   Copyright (c) 2016 - 2017, University of California, Berkeley.          #
#                                                                           #
#   Author(s):  Ali Moin, EECS Department, UC Berkeley.                     #
#               Pierluigi Nuzzo, EE Department, USC.                        #
#                                                                           #
#   This file is distributed under the terms in the attached LICENSE file.  #
#***************************************************************************#


# Runs all simulations, and saves the results in a text file

from funcs import *
from single_run import *

rate = 10
sim_time = 600

nodes = [[0, 1, 3, 5], [0, 1, 2, 3, 5], [0, 2, 3, 4, 5], [0, 1, 4, 5], [0, 1, 4, 9], [0, 2, 4, 5], [0, 2, 4, 9], [0, 1, 2, 4, 5], [0, 1, 2, 3, 4, 5], [0, 2, 3, 4, 9], [0, 2, 3, 4, 5, 9], [0, 1, 4, 7, 9], [0, 1, 4, 5, 9], [0, 2, 4, 5, 9], [0, 2, 4, 7, 9], [0, 2, 3, 9], [0, 2, 3, 6, 9], [0, 1, 3, 4, 5], [0, 2, 3, 4, 5, 6], [0, 1, 4, 7, 8, 9], [0, 1, 4, 5, 6, 9], [0, 2, 4, 5, 6, 9], [0, 2, 4, 7, 8, 9], [0, 2, 3, 6, 7, 9], [0, 1, 3, 4, 9], [0, 1, 2, 3, 4, 9], [0, 2, 4, 5, 6], [0, 2, 3, 4, 5, 7], [0, 2, 3, 4, 5, 8], [0, 1, 2, 4, 5, 9], [0, 1, 4, 5, 7, 9], [0, 1, 4, 5, 8, 9], [0, 2, 4, 5, 7, 9], [0, 2, 4, 5, 8, 9], [0, 2, 3, 4, 6, 9], [0, 1, 2, 3, 9], [0, 2, 3, 6, 8, 9], [0, 1, 4, 6, 9], [0, 1, 3, 4, 5, 9], [0, 1, 3, 4, 5, 6], [0, 2, 4, 5, 6, 7], [0, 2, 4, 5, 6, 8], [0, 1, 3, 4, 6, 9], [0, 1, 4, 5, 7], [0, 1, 4, 5, 7, 8], [0, 1, 2, 4, 5, 6], [0, 1, 2, 4, 5, 7], [0, 2, 4, 6, 9], [0, 2, 4, 6, 7, 9], [0, 2, 3, 7, 9], [0, 2, 3, 7, 8, 9], [0, 1, 2, 4, 9], [0, 1, 2, 3, 6, 9], [0, 1, 2, 3, 7, 9], [0, 1, 2, 3, 8, 9], [0, 1, 4, 6, 7, 9], [0, 1, 4, 6, 8, 9], [0, 1, 3, 4, 5, 7], [0, 1, 3, 4, 5, 8], [0, 2, 4, 8, 9], [0, 1, 3, 5, 9], [0, 1, 3, 5, 6, 9], [0, 1, 3, 5, 7, 9], [0, 1, 3, 5, 8, 9], [0, 1, 3, 5, 7], [0, 1, 3, 5, 7, 8], [0, 1, 4, 5, 6], [0, 1, 4, 5, 6, 7], [0, 1, 4, 5, 6, 8], [0, 1, 3, 5, 6], [0, 1, 3, 5, 6, 7], [0, 1, 3, 5, 6, 8], [0, 1, 3, 5, 8], [0, 2, 3, 5, 9], [0, 2, 3, 5, 6, 9], [0, 2, 3, 5, 7, 9], [0, 2, 3, 5, 8, 9], [0, 1, 3, 9], [0, 1, 3, 6, 9], [0, 1, 3, 6, 7, 9], [0, 1, 3, 6, 8, 9], [0, 1, 3, 7, 9], [0, 1, 3, 7, 8, 9], [0, 2, 3, 5, 6], [0, 2, 3, 5, 6, 7], [0, 2, 3, 5, 6, 8], [0, 2, 3, 5, 8], [0, 2, 3, 5, 7], [0, 2, 3, 5, 7, 8], [0, 1, 3, 8, 9], [0, 1, 2, 4, 5, 8], [0, 1, 2, 3, 5, 9], [0, 1, 2, 3, 5, 6], [0, 1, 2, 3, 5, 7], [0, 1, 2, 3, 5, 8], [0, 1, 4, 5, 8], [0, 2, 4, 6, 8, 9], [0, 2, 4, 5, 7], [0, 2, 4, 5, 7, 8], [0, 2, 4, 5, 8], [0, 1, 2, 4, 6, 9], [0, 1, 2, 4, 7, 9], [0, 1, 2, 4, 8, 9], [0, 1, 4, 8, 9], [0, 2, 3, 8, 9], [0, 2, 3, 4, 7, 9], [0, 2, 3, 4, 8, 9], [0, 1, 3, 4, 7, 9], [0, 1, 3, 4, 8, 9], [0, 2, 3, 5]]

routing = [',star', '']
MAC = [',CSMA', '']
TxPw = [',varyTxPower=\\\"-20dBm\\\"', ',varyTxPower=\\\"-10dBm\\\"', ',varyTxPower=\\\"0dBm\\\"']

total_sims = len(nodes) * len(routing) * len(MAC) * len(TxPw)
sim_ind = 1

results = []

text_file = open('all_results.txt', "w")

for rt in routing:
    for pw in TxPw:
        for mc in MAC:
            for n in nodes:
                if mc==',CSMA':
                    mc_label = 'CSMA'
                else:
                    mc_label = 'TDMA'
                if rt==',star':
                    rt_label = 'Star'
                else:
                    rt_label = 'Mesh'
                if pw==',varyTxPower=\\\"0dBm\\\"':
                    pw_label = '0dBm'
                elif pw==',varyTxPower=\\\"-10dBm\\\"':
                    pw_label = '-10dBm'
                else:
                    pw_label = '-20dBm'
                print('Running sim ' + str(sim_ind) + '/' + str(total_sims))
                sim_ind += 1
                label = str(n) + '|' + mc_label + '|' + pw_label + '|' + rt_label
                res = single_run(n, rt, mc, pw, rate, sim_time)
                results.append([label, res[0], res[1], res[2]])

for i in range(len(results)):
    text_file.write(results[i][0] + '\t' + str(results[i][1]*100) + '\t' + str(results[i][2]) + '\t' + str(results[i][3]) + '\n')

text_file.close()
